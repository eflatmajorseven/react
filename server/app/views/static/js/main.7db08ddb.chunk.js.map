{"version":3,"sources":["services/auth.service.js","components/Login.js","components/Register.js","services/auth-header.js","services/user.service.js","components/Home.js","components/Profile.js","common/EventBus.js","components/BoardUser.js","components/BoardModerator.js","components/BoardAdmin.js","components/Calendar.js","common/AuthVerify.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","username","name","lastname","email","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","parse","getItem","required","value","className","role","Login","props","form","useRef","checkBtn","useState","setUsername","setPassword","loading","setLoading","message","setMessage","src","alt","onSubmit","e","preventDefault","current","validateAll","context","_errors","length","AuthService","history","push","window","location","reload","error","resMessage","toString","ref","htmlFor","type","onChange","target","validations","disabled","style","display","validEmail","isEmail","vusername","vpassword","Register","setName","setLastname","setEmail","successful","setSuccessful","authHeader","user","get","headers","Home","content","setContent","useEffect","UserService","_content","Profile","currentUser","substring","substr","id","roles","map","index","key","eventBus","on","event","callback","document","addEventListener","detail","dispatch","dispatchEvent","CustomEvent","remove","removeEventListener","BoardUser","status","EventBus","BoardModerator","BoardAdmin","DemoApp","handleDateClick","arg","alert","dateStr","plugins","dayGridPlugin","interactionPlugin","dateClick","this","eventContent","renderEventContent","events","title","date","React","Component","eventInfo","timeText","withRouter","listen","token","atob","split","parseJwt","exp","Date","now","logOut","App","showModeratorBoard","setShowModeratorBoard","showAdminBoard","setShowAdminBoard","undefined","setCurrentUser","includes","to","href","onClick","exact","path","component","Calendar","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.7db08ddb.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/auth/\";\r\n\r\nconst register = (username,name,lastname, email, password) => {\r\n  return axios.post(API_URL + \"signup\", {\r\n    username,\r\n    name,\r\n    lastname,\r\n    email,\r\n    password,\r\n  });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios\r\n    .post(API_URL + \"signin\", {\r\n      username,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.accessToken) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst createSlotAdmin = (name,lastname) => {\r\n  return axios.\r\n  post(API_URL + \"slotadmin\", {\r\n    name,\r\n    lastname\r\n  })\r\n};\r\n\r\nconst createSlotUser = (shiftstart,shiftend) => {\r\n  return axios.\r\n  post(API_URL + \"slotuser\", {\r\n    shiftstart,\r\n    shiftend\r\n  })\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n};\r\n","import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Login = (props) => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(\"\");\r\n    setLoading(true);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthService.login(username, password).then(\r\n        () => {\r\n          props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setLoading(false);\r\n          setMessage(resMessage);\r\n        }\r\n      );\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={onChangeUsername}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <Input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={onChangePassword}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\r\n              {loading && (\r\n                <span className=\"spinner-border spinner-border-sm\"></span>\r\n              )}\r\n              <span>Login</span>\r\n            </button>\r\n          </div>\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div className=\"alert alert-danger\" role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst validEmail = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 3 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Register = (props) => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [successful, setSuccessful] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n  const onChangeName = (e) => {\r\n    const name = e.target.value;\r\n    setName(name);\r\n  };\r\n  const onChangeLastname = (e) => {\r\n    const lastname = e.target.value;\r\n    setLastname(lastname);\r\n  };\r\n\r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(\"\");\r\n    setSuccessful(false);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthService.register(username,name,lastname, email, password).then(\r\n        (response) => {\r\n          setMessage(response.data.message);\r\n          setSuccessful(true);\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setMessage(resMessage);\r\n          setSuccessful(false);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n\r\n        <Form onSubmit={handleRegister} ref={form}>\r\n          {!successful && (\r\n            <div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"username\"\r\n                  value={username}\r\n                  onChange={onChangeUsername}\r\n                  validations={[required, vusername]}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Name</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  onChange={onChangeName}\r\n                  validations={[required]}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"lastname\">Lastname</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"lastname\"\r\n                  value={lastname}\r\n                  onChange={onChangeLastname}\r\n                  validations={[required]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={onChangeEmail}\r\n                  validations={[required, validEmail]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <Input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={onChangePassword}\r\n                  validations={[required, vpassword]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div\r\n                className={\r\n                  successful ? \"alert alert-success\" : \"alert alert-danger\"\r\n                }\r\n                role=\"alert\"\r\n              >\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  if (user && user.accessToken) {\r\n   // return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\r\n     return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\r\n  } else {\r\n    return {};\r\n  }\r\n}","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/test/\";\r\n\r\nconst getPublicContent = () => {\r\n  return axios.get(API_URL + \"all\");\r\n};\r\n\r\nconst getUserBoard = () => {\r\n  return axios.get(API_URL + \"user\", { headers: authHeader() });\r\n};\r\n\r\nconst getModeratorBoard = () => {\r\n  return axios.get(API_URL + \"mod\", { headers: authHeader() });\r\n};\r\n\r\nconst getAdminBoard = () => {\r\n  return axios.get(API_URL + \"admin\", { headers: authHeader() });\r\n};\r\n\r\nexport default {\r\n  getPublicContent,\r\n  getUserBoard,\r\n  getModeratorBoard,\r\n  getAdminBoard,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nconst Home = () => {\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    UserService.getPublicContent().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response && error.response.data) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>{content}</h3>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst Profile = () => {\r\n  const currentUser = AuthService.getCurrentUser();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>\r\n          <strong>{currentUser.name}</strong> Profile\r\n        </h3>\r\n      </header>\r\n      <p>\r\n        <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n        {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n      </p>\r\n      <p>\r\n        <strong>Id:</strong> {currentUser.id}\r\n      </p>\r\n      <p>\r\n        <strong>Email:</strong> {currentUser.email}\r\n      </p>\r\n      <strong>Authorities:</strong>\r\n      <ul>\r\n        {currentUser.roles &&\r\n          currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","const eventBus = {\r\n  on(event, callback) {\r\n    document.addEventListener(event, (e) => callback(e.detail));\r\n  },\r\n  dispatch(event, data) {\r\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\r\n  },\r\n  remove(event, callback) {\r\n    document.removeEventListener(event, callback);\r\n  },\r\n};\r\n\r\nexport default eventBus;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\n\r\nconst BoardUser = () => {\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    UserService.getUserBoard().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>{content}</h3>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardUser;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\n\r\nconst BoardModerator = () => {\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    UserService.getModeratorBoard().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>{content}</h3>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardModerator;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\n\r\nconst BoardAdmin = () => {\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    UserService.getAdminBoard().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>{content}</h3>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardAdmin;\r\n","import React from 'react'\r\nimport FullCalendar from '@fullcalendar/react' // must go before plugins\r\nimport dayGridPlugin from '@fullcalendar/daygrid' // a plugin!\r\nimport interactionPlugin from \"@fullcalendar/interaction\" // needed for dayClick\r\n\r\nexport default class DemoApp extends React.Component {\r\n \r\n  \r\n  render() {\r\n    return (\r\n      <FullCalendar\r\n        \r\n        plugins={[ dayGridPlugin, interactionPlugin ]}\r\n        dateClick={this.handleDateClick}\r\n        eventContent={renderEventContent}\r\n        events={[\r\n    { title: `}`, date: '2022-01-21' },\r\n    { title: 'event 2', date: '2022-01-22' }\r\n  ]}\r\n      />\r\n    )\r\n  }\r\n\r\n  handleDateClick = (arg) => { \r\n    alert(arg.dateStr)\r\n  }\r\n\r\n}\r\nfunction renderEventContent(eventInfo) {\r\n  return (\r\n    <>\r\n      <b>{eventInfo.timeText}</b>\r\n      <i>{eventInfo.event.title}</i>\r\n    </>\r\n  )\r\n}","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst parseJwt = (token) => {\r\n  try {\r\n    return JSON.parse(atob(token.split(\".\")[1]));\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst AuthVerify = (props) => {\r\n  props.history.listen(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n    if (user) {\r\n      const decodedJwt = parseJwt(user.accessToken);\r\n\r\n      if (decodedJwt.exp * 1000 < Date.now()) {\r\n        props.logOut();\r\n      }\r\n    }\r\n  });\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default withRouter(AuthVerify);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport Login from \"./components/Login\";\r\nimport Register from \"./components/Register\";\r\nimport Home from \"./components/Home\";\r\nimport Profile from \"./components/Profile\";\r\nimport BoardUser from \"./components/BoardUser\";\r\nimport BoardModerator from \"./components/BoardModerator\";\r\nimport BoardAdmin from \"./components/BoardAdmin\";\r\nimport Calendar from \"./components/Calendar\";\r\n\r\n import AuthVerify from \"./common/AuthVerify\";\r\nimport EventBus from \"./common/EventBus\";\r\n\r\nconst App = () => {\r\n  const [showModeratorBoard, setShowModeratorBoard] = useState(false);\r\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      setCurrentUser(user);\r\n      setShowModeratorBoard(user.roles.includes(\"ROLE_MODERATOR\"));\r\n      setShowAdminBoard(user.roles.includes(\"ROLE_ADMIN\"));\r\n    }\r\n\r\n    EventBus.on(\"logout\", () => {\r\n      logOut();\r\n    });\r\n\r\n    return () => {\r\n      EventBus.remove(\"logout\");\r\n    };\r\n  }, []);\r\n\r\n  const logOut = () => {\r\n    AuthService.logout();\r\n    setShowModeratorBoard(false);\r\n    setShowAdminBoard(false);\r\n    setCurrentUser(undefined);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n        <Link to={\"/\"} className=\"navbar-brand\">\r\n          Calendar\r\n        </Link>\r\n        <div className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/home\"} className=\"nav-link\">\r\n              Home\r\n            </Link>\r\n          </li>\r\n\r\n          {showModeratorBoard && (\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/mod\"} className=\"nav-link\">\r\n                Moderator Board\r\n              </Link>\r\n            </li>\r\n          )}\r\n\r\n          {showAdminBoard && (\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/admin\"} className=\"nav-link\">\r\n                Admin Board\r\n              </Link>\r\n            </li>\r\n          )}\r\n\r\n          {currentUser && (\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/user\"} className=\"nav-link\">\r\n                User\r\n              </Link>\r\n            </li>\r\n          )}\r\n        </div>\r\n\r\n        {currentUser ? (\r\n          <div className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/profile\"} className=\"nav-link\">\r\n                {currentUser.username}\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\r\n                LogOut\r\n              </a>\r\n            </li>\r\n          </div>\r\n        ) : (\r\n          <div className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/login\"} className=\"nav-link\">\r\n                Login\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/register\"} className=\"nav-link\">\r\n                Sign Up\r\n              </Link>\r\n            </li>\r\n          </div>\r\n        )}\r\n      </nav>\r\n\r\n      <div className=\"container mt-3\">\r\n        <Switch>\r\n          <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/profile\" component={Profile} />\r\n          <Route path=\"/user\" component={BoardUser} />\r\n          <Route path=\"/mod\" component={BoardModerator} />\r\n          <Route path=\"/admin\" component={BoardAdmin} />\r\n          <Route path=\"/calendar\" component={Calendar}/>\r\n        </Switch>\r\n      </div>\r\n\r\n      { <AuthVerify logOut={logOut}/> }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}